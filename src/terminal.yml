---
- include_tasks: basic.yml

- name: install terminal packages
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ terminal_p }}"
  ignore_errors: True

- name: install serial packages
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ serial_p }}"
  ignore_errors: True

- name: install bridges package
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ bridges_p }}"
  ignore_errors: True

- include_tasks: neovim.yml
  ignore_errors: True

- name: set default shell to zsh
  user:
    name: "{{ user }}"
    shell: /bin/zsh

- name: Create a 4096-bit SSH key for user {{ user }}
  user:
    name: "{{ user }}"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

- name: install pipenv, virtualenvwrapper
  pip:
    name: "{{ item }}"
    executable: pip3
    extra_args: --user
  state: latest
  loop:
    - pipenv
    - virtualenvwrapper
    - pynvim
  become_user: "{{ user }}"
  ignore_errors: yes

- name: install pipenv, virtualenvwrapper
  pip:
    name: "{{ item }}"
    executable: pip
    extra_args: --user
  state: latest
  loop:
    - pipenv
    - virtualenvwrapper
    - pynvim
  become_user: "{{ user }}"
  ignore_errors: yes

- name: add user {{ user }} to dialout
  user:
    name: "{{ user }}"
    groups: dialout, users
    append: yes

- name: set primary group {{ user }}
  user:
    name: "{{ user }}"
    group: "{{ user }}"
    append: yes

- name: create group deluge
  group:
    name: deluge
    state: present
    gid: 2000

- name: create user deluge
  user:
     name: deluge
     group: deluge
     shell: /bin/false
     home: /var/lib/deluge/
     uid: 2000

- name: create group flexget
  group:
    name: flexget
    state: present
    gid: 2001

- name: create user flexget
  user:
     name: flexget
     group: flexget
     shell: /bin/false
     home: /var/lib/flexget
     uid: 2001

- name: add user {{ user }} to deluge
  user:
    name: "{{ user }}"
    groups: deluge, users
    append: yes

- name: clone p_dotfiles
  git:
    repo: 'https://github.com/retiarus/p_dotfiles'
    dest: '/home/{{ user }}/p_dotfiles'
    clone: yes
    update: yes
    recursive: yes
    force: yes
  become_user: "{{ user }}"

- name: crete dir's to home in mnt
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
  with_items:
    - '/home/{{ user }}/arquivos'
    - '/home/{{ user }}/experimentos'
    - '/mnt/falco03'
    - '/mnt/falco06'
    - '/mnt/iso'
    - '/mnt/animes'
    - '/mnt/filmes'
    - '/mnt/imagens'
    - '/mnt/arquivos'
    - '/mnt/downloads'
    - '/mnt/experimentos'
    - '/mnt/downloads-deluge'
    - '/mnt/mpiuser'
    - '/mnt/ubuntu-01/home'
    - '/mnt/ubuntu-02/home'
    - '/mnt/ubuntu-03/home'
  ignore_errors: yes

- name: add hosts to host file
  lineinfile:
    path: "/etc/hosts"
    line: "{{ item }}"
  loop:
    - "192.168.5.11  ubuntu-01        ubuntu-01.falco.net"
    - "192.168.5.12  ubuntu-02        ubuntu-02.falco.net"
    - "192.168.5.13  ubuntu-03        ubuntu-03.falco.net"
    - "192.168.5.3   falco03          falco03.falco.net"
    - "192.168.5.4   falco04          falco04.falco.net"
    - "192.168.5.5   falco05          falco05.falco.net"
    - "192.168.5.6   falco06          falco06.falco.net"
    - "192.168.5.251 cubietruck       cubietruck.falco.net"
    - "192.168.5.252 boot-service     boot-service.falco.net"
    - "192.168.5.253 media-service    media-service.falco.net"
    - "192.168.5.254 pve              pve.falco.net"
    - "192.168.5.1   OPNsense         OPNsense.falco.net"

- name: add entrys to fstab file
  lineinfile:
    path: "/etc/fstab"
    line: "{{ item }}"
  when: ansible_facts['hostname'] != 'pve'
  loop:
    - "pve.falco.net:experimentos           /home/{{ user }}/experimentos     nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:arquivos               /home/{{ user }}/arquivos         nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:downloads              /home/{{ user }}/Downloads        nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:filmes                 /mnt/filmes                       nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:iso                    /mnt/iso                          nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:imagens                /mnt/imagens                      nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:musicas                /mnt/musicas                      nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"
    - "pve.falco.net:download-media-service /mnt/downloads-deluge             nfs noatime,noacl,nocto,wsize=32768,rsize=32768           0 0"

- name: create /usr/local/share/ca-certificates/extra
  file:
    name: /usr/local/share/ca-certificates/extra
    state: directory
    owner: root
    group: root

- name: copy certificate to /usr/local/share/ca-certificates/extra
  copy:
    src: ./files/selfsigned-ca-cert.crt
    dest: /usr/local/share/ca-certificates/extra/selfsigned-ca-cert.crt

- name: update list of certificates
  command: update-ca-certificates
...
