#!/usr/bin/nft -f

flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 0; policy drop;
		ct state established,related counter accept
		ct state invalid counter drop
		iifname "lo" counter accept
		ip protocol icmp ct state new counter accept
		ip protocol udp ct state new counter jump UDP-INPUT
		tcp flags & (fin | syn | rst | ack) == syn ct state new counter jump TCP-INPUT
		ip protocol udp counter reject
		ip protocol tcp counter reject with tcp reset
		meta nfproto ipv4 counter reject with icmp type prot-unreachable
	}

	chain forward {
		type filter hook forward priority 0; policy drop;
	}

	chain output {
		type filter hook output priority 0; policy drop;
		ct state established,related counter accept
		ct state invalid counter drop
		oifname "lo" counter accept
		ip protocol icmp ct state new counter accept
		ip protocol udp ct state new counter jump UDP-OUTPUT
		tcp flags & (fin | syn | rst | ack) == syn ct state new counter jump TCP-OUTPUT
		ip protocol udp counter reject
		ip protocol tcp counter reject with tcp reset
		meta nfproto ipv4 counter reject with icmp type prot-unreachable
	}

	chain TCP-INPUT {
		tcp dport ssh accept
		tcp dport 24800 accept
		tcp dport sunrpc accept
		tcp dport nfs accept
	}

	chain UDP-INPUT {
		udp dport mdns accept
		udp dport sunrpc accept
		udp dport nfs accept
	}

	chain TCP-OUTPUT {
		tcp dport ssh accept
		tcp dport http accept
		tcp dport https accept
		tcp dport domain accept
		tcp dport 58846 accept
		tcp dport 24800 accept
		tcp dport ipp accept
		tcp dport sunrpc accept
		tcp dport nfs accept
    tcp dport postgresql accept
    tcp dport 440 accept # opnsense
    tcp dport 8080 accept # bitwarden
    tcp dport 8006 accept # pve
    tcp dport 9000 accept # portainer
    tcp dport 19999 accept # netdata
    tcp dport 16543 accept # pgadmin
	}

	chain UDP-OUTPUT {
		udp dport ntp accept
		udp dport domain accept
		udp dport mdns accept
		udp dport sunrpc accept
		udp dport nfs accept
	}
}
