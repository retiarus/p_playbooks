---
version: "2"
services:
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    network_mode: host
    environment:
      - PUID=2000
      - PGID=2000
      - UMASK_SET=022
      - TZ=America/Sao_Paulo
    volumes:
      - /var/lib/deluge:/config
      - /mnt/Arquivos-midias:/downloads
    restart: unless-stopped

  flexget:
    image: cpoppema/docker-flexget
    container_name: flexget
    environment:
      - PUID=2001
      - PGID=2001
      - WEB_PASSWD=a1b2c3d4
      - TORRENT_PLUGIN=deluge
      - TZ=America/Sao_Paulo
      - FLEXGET_LOG_LEVEL=debug
    ports:
      - "5050:5050"
    volumes:
      - /var/lib/flexget:/config
      - /mnt/Arquivos-midias:/downloads

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=2002
      - PGID=2002
      - TZ=America/Sao_Paulo
    volumes:
      - /var/lib/heimdall:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
     - "8883:8883"
     - "1883:1883"
    restart: always
    volumes:
      - /etc/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /etc/mosquitto/jp.pw:/etc/config/jp.pw:ro
      - /var/lib/mosquitto/data:/mosquitto/data
      - /var/lib/mosquitto/log:/mosquitto/log
    networks:
      - iot_grafana

  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    restart: always
    environment:
     - INFLUXDB_INIT_PWD="password"
     - PRE_CREATE_DB="iot"
    ports:
     - "8083:8083"
     - "8086:8086"
    volumes:
     - /var/lib/influxdb/data:/var/lib/influxdb
     - /etc/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    networks:
     - iot_grafana

  grafana:
    image: grafana
    container_name: grafana
    restart: always
    ports:
     - "3000:3000"
    volumes:
      - grafana-db:/var/lib/grafana
      - grafana-log:/var/log/grafana
      - grafana-conf:/etc/grafana
    networks:
      - iot_grafana

  diskover:
    image: linuxserver/diskover
    container_name: diskover
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Sao_Paulo
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASS=changeme
      - RUN_ON_START=true
      - USE_CRON=true
    volumes:
      - /var/lib/diskover/config:/config
      - /var/lib/diskover/data:/data
    ports:
      - 80:80
      - 9181:9181
      - 9999:9999
    mem_limit: 4096m
    restart: unless-stopped
    depends_on:
      - elasticsearch
      - redis

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    volumes:
      - /var/lib/elasticsearch/data:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - /var/lib/redis:/data

  plex:
    container_name: plex
    image: linuxserver/plex
    environment:
      - TZ=America/Sao_Paulo
      - PUID=1000
      - PGID=1000
    volumes:
      - /plex:/config
      - /mnt/storage/movies:/movies
      - /mnt/storage/tv:/tvshows
    labels:
      - "traefik.enable=true"
      - "traefik.port=32400"
      - "traefik.frontend.rule=Host:plex.domain.com"

  traefik:
    container_name: traefik
    image: traefik:alpine
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /traefik/traefik.toml:/etc/traefik/traefik.toml
      - /traefik/acme.json:/acme.json

  jupyterlab:
    container_name: jupyterlab
    image: jupyter/datascience-notebook
    environment:
      - NB_USER=peregrinus
      - JUPYTER_ENABLE_LAB=yes
      - GEN_CERT=yes
    volumes:
      - /home/peregrinus:/home/jovyan/work
    ports:
      - 8080:8888
    networks:
      - jupyter_network

  jupyterhub:
    container_name: jupyterhub
    image: jupyterhub/jupyterhub
    ports:
      - 8000:8000
    networks:
      - jupyter_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      DOCKER_NETWORK_NAME: jupyter_network
      DOCKER_JUPYTER_IMAGE: jupyter/datascience-notebook

  vscodeserver:
    container_name: vscodeserver
    image: codercom/code-server
    ports:
      - 8443:8443
    volumes:
      - /mnt/experimentos:/home/coder/project
    command: --allow-http --no-auth
    networks:
      - jupyter_network

  bitwarden:
    image: bitwardenrs/server:latest
    user: 1030:1030
    volumes:
      - /var/lib/bitwarden/data:/data
      - /var/lib/bitwarden/certs:/ssl
    environment:
      - WEBSOCKET_ENABLED=true
      - ROCKET_PORT=1024
        #    - ROCKET_TLS='{certs="/ssl/certs.pem", key="/ssl/key.pem"}'
    ports:
      - 8080:1024
      - 3012:3012
    restart: unless-stopped
    networks:
      - local

volumes:
  grafana-db:
    driver: local
  grafana-log:
    driver: local
  grafana-conf:
    driver: local

networks:
  iot_grafana:
  jupyter_network:
  local:
